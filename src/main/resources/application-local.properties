
# actuator
# 暴露所有端点
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=always
# 默认情况下 有端点都不启用，此时需要按需启用端点
management.endpoints.enabled-by-default=true
management.endpoint.health.enabled=true
management.server.port=9091


# graceful
server.shutdown=graceful
# 20s
spring.lifecycle.timeout-per-shutdown-phase=20s

# spring.boot.admin.client
spring.boot.admin.client.url=http://127.0.0.1:8081
spring.boot.admin.client.instance.name=dev-rest-mq
spring.boot.admin.client.instance.prefer-ip=true
# 是否启用Spring Boot Admin Client
spring.boot.admin.client.enabled=true
# server端获取client信息的路径，默认情况下server通过访问/instances请求来获取到client端的信息。（client端向server端注册，注册成功后server端会给该client创建一个唯一的clientID值。当server端需要获取client的信息，比如health信息时，server端会发送http://IP:PORT/instances/clientID/actuator/health即可，这里的http://IP:PORT是client所在服务器的IP地址，instances就是该属性的值）
spring.boot.admin.client.api-path=instances
# 注册时间间隔，单位是毫秒
spring.boot.admin.client.period=10000
# 注册连接超时时间，单位是毫秒.当client向server进行注册时，如果5秒钟没有注册完成则认为本次注册失败；
spring.boot.admin.client.connect-timeout=5000
# 注册读取超时，单位是毫秒
spring.boot.admin.client.read-timeout=5000

# security
spring.boot.admin.client.username=admin
spring.boot.admin.client.password=admin



# rabbitmq
spring.rabbitmq.addresses=${RABBITMQ_HOST:127.0.0.1}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:rabbitmq}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:rabbitmq@com}
spring.rabbitmq.virtual-host=/

